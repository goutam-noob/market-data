

import requests
import json
import pandas as pd

## REQUESTS PACKAGE KNOWLEDGE
url = 'https://www.nseindia.com/api/option-chain-indices?symbol=NIFTY'
headers={'user-agent' : 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36'}
#Go to website, grab contents from website
#To resolve, need to look at the website and maybe add authentications (Username/Password) to allow access this way. 
response = requests.get(url, headers=headers, timeout=10)
print(response.status_code) 
#Grab response from requests & convert to json https://developer.mozilla.org/en-US/docs/Web/API/Response/json
json_object = response.json()

## JSON FORMATTING KNOWLEDGE
#Parse the json into a a usable format
#Json is essentially a large nest of dictionaries. 
# Example from the website: {"records":{"expiryDates":["02-Feb-2023","09-Feb-2023","16-Feb-2023","23-Feb-2023","02-Mar-2023","29-Mar-2023","27-Apr-2023","29-Jun-2023","28-Sep-2023","28-Dec-2023","27-Jun-2024","26-Dec-2024","26-Jun-2025","24-Dec-2025","25-Jun-2026","31-Dec-2026","24-Jun-2027","30-Dec-2027"],"data":
#The for loops loop through each sub brackets to get the data out.
expiry_date = '09-Feb-2023'
def set_decimal(x):
    return ('%.2f' % x).rstrip('0').rstrip('.')
data = json_object['records']['data']
e_date=json_object['records']['expiryDates']
oc_data = {}
for ed in e_date:
    oc_data[ed]={"CE":[], "PE":[]}
    for di in range(len(data)):
        
        if data[di]['expiryDate'] == ed:
            if 'CE' in data[di].keys() and data[di]['CE']['expiryDate'] == ed:                
                oc_data[ed]["CE"].append(data[di]['CE'])
            else:
                oc_data[ed]["CE"].append('-')

            if 'PE' in data[di].keys() and data[di]['PE']['expiryDate'] == ed:
                oc_data[ed]["PE"].append(data[di]['PE'])
                
            else:
                oc_data[ed]["PE"].append('-')
keys_to_exclude = [
                    'pchangeinOpenInterest', 
                    'totalBuyQuantity', 
                    'totalSellQuantity', 
                    'underlyingValue',
                    'expiryDate',
                    'underlying',
                    'identifier',
                    'pChange'
]
oc_data_dt=oc_data[expiry_date]

CE=list(oc_data_dt['CE'])
PE=list(oc_data_dt['PE'])
for i in range(len(CE)):
    if CE[i] != '-':
        for key in keys_to_exclude:
            del CE[i][key]

    if PE[i] != '-':
        for key in keys_to_exclude:
            del PE[i][key]
l_OC = []

for i in range(len(CE)):
    l_CE=[]
    l_PE=[]

    if CE[i] != '-':
        sp = CE[i]['strikePrice']
        l_CE =  [  
                    CE[i]['openInterest'], 
                    CE[i]['changeinOpenInterest'] , 
                    CE[i]['totalTradedVolume'] , 
                    CE[i]['impliedVolatility'] , 
                    CE[i]['lastPrice'] , 
                    set_decimal(CE[i]['change']), 
                    CE[i]['bidQty']   , 
                    CE[i]['bidprice'] , 
                    CE[i]['askPrice'] ,
                    CE[i]['askQty'] , 
                    CE[i]['strikePrice']
                ]
    else:
        sp = PE[i]['strikePrice']
        l_CE= list(['-','-','-','-','-','-','-','-','-','-',sp])

    if PE[i] != '-':
        l_PE =  [
                    PE[i]['bidQty']   ,
                    PE[i]['bidprice'] ,
                    PE[i]['askPrice'] ,
                    PE[i]['askQty'] , 
                    set_decimal(PE[i]['change']),
                    PE[i]['lastPrice'] ,
                    PE[i]['impliedVolatility'] ,
                    PE[i]['totalTradedVolume'] ,
                    PE[i]['changeinOpenInterest'] ,
                    PE[i]['openInterest']
        ] 

    else:
        l_PE = list(['-','-','-','-','-','-','-','-','-','-'])
    
    
    l_OC_t = l_CE + l_PE
    l_OC_t[:] = [x if x != 0 else '-' for x in l_OC_t]

    l_OC.append(l_OC_t)
#End of grabbing all the data from the website, store them into l_OC

## PANDAS KNOWLEDGE
#This list will be the column names. 
OC_col = ['c_OI', 'c_CHNG_IN_OI', 'c_VOLUME', 'c_IV', 'c_LTP', 'c_CHNG', 'c_BID_QTY', 'c_BID', 'c_ASK', 'c_ASK_QTY',  'STRIKE', 'p_BID_QTY', 'p_BID', 'p_ASK', 'p_ASK_QTY',  'p_CHNG', 'p_LTP', 'p_IV', 'p_VOLUME', 'p_CHNG_IN_OI', 'p_OI'] 
pd.set_option('display.max_rows', None)
pd.set_option('display.max_columns', None)

#Take cleaned up json from website, convert to dataframe. 
df = pd.DataFrame(l_OC)
df.columns = OC_col #Column names declared here from above. 
print(len(df))
print(df.columns)
print(len(df.columns))
#Drop these columns
#df1=df.drop(columns=['c_BID','c_ASK','c_ASK_QTY','p_BID_QTY','p_BID','p_ASK'])
df1=df.drop(['c_BID','c_ASK','c_ASK_QTY','p_BID_QTY','p_BID','p_ASK'], axis = 1)
print(df1.columns)
print(len(df1.columns))
#df2=df.drop(df1[(df1['STRIKE'] <17000) & (df1['STRIKE'] > 19000)].index, inplace=True)
marks_data = pd.DataFrame(df1) 
print(len(df1))
file_name = 'OI.xlsx'
marks_data.to_excel(file_name)
print("done")

